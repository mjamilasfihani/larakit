name: PHPUnit

on:
  pull_request:
    branches:
      - develop
    paths:
      - '**.php'
      - 'composer.*'
      - 'phpunit*'
      - '.github/workflows/phpunit.yml'
  push:
    branches:
      - develop
    paths:
      - '**.php'
      - 'composer.*'
      - 'phpunit*'
      - '.github/workflows/phpunit.yml'

jobs:
  main:
    name: PHP ${{ matrix.php-versions }} Unit Tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        php-versions: ['8.0', '8.1']
    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer, phpunit
          extensions: intl, json, mbstring, gd, pcov, xml, sqlite3
          coverage: pcov
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get composer cache directory
        run: echo "COMPOSER_CACHE_FILES_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.COMPOSER_CACHE_FILES_DIR }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          if [ -f composer.lock ]; then
            composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader
          else
            composer update --no-progress --no-interaction --prefer-dist --optimize-autoloader
          fi

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

          mkdir -p database
          touch ${{ env.DB_DATABASE }}

      - name: Run migrations
        run: php artisan migrate

      - name: Test with Artisan
        run: php artisan test

      - if: matrix.php-versions == '8.0'
        name: Run Coverages with PHPUnit
        continue-on-error: true
        run: |
          vendor/bin/phpunit --verbose --coverage-text
        env:
          TERM: xterm-256color
          TACHYCARDIA_MONITOR_GA: enabled
